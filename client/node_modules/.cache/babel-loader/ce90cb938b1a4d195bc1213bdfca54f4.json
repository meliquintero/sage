{"ast":null,"code":"var _jsxFileName = \"/Users/melissajimison/Documents/c5/exercise/Data-Structures-Practice/algorithms/sage/client/src/App.js\";\nimport React, { Component } from 'react';\nimport User from './models/user';\nimport Movies from './components/Movies';\nimport MoviesButton from './components/MoviesButton';\nimport UploadMovie from './components/UploadMovie';\nimport { getUser, getUserFavoriteMovies } from './apiWrapper';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoaded: false,\n      user: '',\n      movies: []\n    };\n\n    this.handleOnClick = () => {\n      console.log(\"handleOnClick name\", this.state.user.username);\n      getUserFavoriteMovies(this.state.user).then(res => this.setState({\n        movies: res\n      })).then(result => {\n        this.setState({\n          isLoaded: true,\n          movies: result\n        });\n      }, error => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      });\n    };\n\n    this.uploadMovie = movie => {\n      let movies = [...this.state.movies, movie];\n      this.setState({\n        movies: movies\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const response = await fetch('/api/world', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          post: this.state.post\n        })\n      });\n      const body = await response.text();\n      this.setState({\n        responseToPost: body\n      });\n    };\n  }\n\n  componentDidMount() {\n    getUser().then(result => {\n      this.setState({\n        isLoaded: true,\n        user: new User(result.username)\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      user,\n      error,\n      isLoaded,\n      movies\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, user.username), React.createElement(MoviesButton, {\n      getMovies: this.handleOnClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), movies && React.createElement(Movies, {\n      movies: movies // handleOnClick={this.handleOnClick}\n      // clicked={this.clicked}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(UploadMovie, {\n      uploadMovie: this.uploadMovie,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/melissajimison/Documents/c5/exercise/Data-Structures-Practice/algorithms/sage/client/src/App.js"],"names":["React","Component","User","Movies","MoviesButton","UploadMovie","getUser","getUserFavoriteMovies","App","state","isLoaded","user","movies","handleOnClick","console","log","username","then","res","setState","result","error","uploadMovie","movie","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","post","text","responseToPost","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport User from './models/user';\nimport Movies from './components/Movies';\nimport MoviesButton from './components/MoviesButton';\nimport UploadMovie from './components/UploadMovie';\n\nimport {getUser, getUserFavoriteMovies} from './apiWrapper';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    isLoaded: false,\n    user: '',\n    movies: []\n  };\n\n  componentDidMount() {\n    getUser()\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            user: new User(result.username)\n          });\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  handleOnClick = () => {\n    console.log(\"handleOnClick name\", this.state.user.username)\n    getUserFavoriteMovies(this.state.user)\n      .then(res => this.setState({movies: res}))\n\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            movies: result\n          });\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n    }\n\n  uploadMovie = (movie) => {\n    let movies = [...this.state.movies, movie]\n    this.setState({movies: movies})\n  }\n\n  handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('/api/world', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ post: this.state.post }),\n    });\n    const body = await response.text();\n\n    this.setState({ responseToPost: body });\n  };\n\nrender() {\n    const { user, error, isLoaded, movies } = this.state;\n    return (\n      <div className=\"App\">\n        <h1>{user.username}</h1>\n        <MoviesButton getMovies={this.handleOnClick} />\n\n        {movies &&\n            <Movies\n              movies={movies}\n              // handleOnClick={this.handleOnClick}\n              // clicked={this.clicked}\n              />\n        }\n        <UploadMovie uploadMovie={this.uploadMovie}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}