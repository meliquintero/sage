{"ast":null,"code":"var _jsxFileName = \"/Users/melissajimison/Documents/c5/exercise/Data-Structures-Practice/algorithms/sage/client/src/App.js\";\nimport React, { Component } from 'react';\nimport User from './models/user';\nimport Movies from './components/Movies';\nimport MoviesButton from './components/MoviesButton';\nimport { getUser, getUserFavoriteMovies } from './apiWrapper';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoaded: false,\n      user: '',\n      movies: []\n    };\n\n    this.handleOnClick = () => {\n      console.log(this.state.user.username);\n      getUserFavoriteMovies(this.state.user.username).then(response => this.setState({\n        movies: response.data\n      }));\n    };\n\n    this.uploadMovie = movie => {\n      let ninjas = [...this.state.ninjas, ninja];\n      this.setState({\n        ninjas: ninjas\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const response = await fetch('/api/world', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          post: this.state.post\n        })\n      });\n      const body = await response.text();\n      this.setState({\n        responseToPost: body\n      });\n    };\n  }\n\n  componentDidMount() {\n    getUser().then(result => {\n      this.setState({\n        isLoaded: true,\n        user: new User(result.username)\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      user,\n      error,\n      isLoaded,\n      movies\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, user.username), React.createElement(MoviesButton, {\n      getMovies: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), movies.length > 0 && React.createElement(Movies, {\n      movies: movies,\n      handleOnClick: this.handleOnClick,\n      clicked: this.clicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Post to Server:\")), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.post,\n      onChange: e => this.setState({\n        post: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.state.responseToPost));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/melissajimison/Documents/c5/exercise/Data-Structures-Practice/algorithms/sage/client/src/App.js"],"names":["React","Component","User","Movies","MoviesButton","getUser","getUserFavoriteMovies","App","state","isLoaded","user","movies","handleOnClick","console","log","username","then","response","setState","data","uploadMovie","movie","ninjas","ninja","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","post","text","responseToPost","componentDidMount","result","error","render","handleClick","length","clicked","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport User from './models/user';\nimport Movies from './components/Movies';\nimport MoviesButton from './components/MoviesButton';\n\nimport {getUser, getUserFavoriteMovies} from './apiWrapper';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    isLoaded: false,\n    user: '',\n    movies: []\n  };\n\n  componentDidMount() {\n    getUser()\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            user: new User(result.username)\n          });\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  handleOnClick = () => {\n    console.log(this.state.user.username)\n    getUserFavoriteMovies(this.state.user.username)\n      .then(response => this.setState({movies: response.data}))\n    }\n\n  uploadMovie = (movie) => {\n    let ninjas = [...this.state.ninjas, ninja]\n    this.setState({ninjas: ninjas})\n  }\n  \n  handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('/api/world', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ post: this.state.post }),\n    });\n    const body = await response.text();\n\n    this.setState({ responseToPost: body });\n  };\n\nrender() {\n    const { user, error, isLoaded, movies } = this.state;\n    return (\n      <div className=\"App\">\n        <h1>{user.username}</h1>\n        <MoviesButton getMovies={this.handleClick} />\n\n        {movies.length > 0 &&\n            <Movies\n              movies={movies}\n              handleOnClick={this.handleOnClick}\n              clicked={this.clicked}/>\n        }\n\n        <form onSubmit={this.handleSubmit}>\n          <p>\n            <strong>Post to Server:</strong>\n          </p>\n          <input\n            type=\"text\"\n            value={this.state.post}\n            onChange={e => this.setState({ post: e.target.value })}\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n        <p>{this.state.responseToPost}</p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}