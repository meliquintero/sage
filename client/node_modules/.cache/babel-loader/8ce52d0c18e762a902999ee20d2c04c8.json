{"ast":null,"code":"export async function getUser() {\n  const response = await fetch('/api/user');\n  const body = await response.json();\n  if (response.status !== 200) throw Error(body.message);\n  return body;\n}\n;\nexport async function getUserFavoriteMovies(user) {\n  const response = await fetch(`/api/movies/${user.username}`);\n  const body = await response.json();\n  if (response.status !== 200) throw Error(body.message);\n  return body;\n}\n;\nexport async function uploadMovie(data) {\n  // let requestData = await data.map((item) => {\n  //   let date = item.dateWatched.split('-')\n  //   return item.dateWatched = Date.UTC(date[0], date[1], date[2])\n  // })\n  //2020-02-19\n  console.log('data===>', data);\n  const response = await fetch('/api/movie', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      movie: data\n    })\n  });\n  const body = await response.json();\n  return body;\n}\n;","map":{"version":3,"sources":["/Users/melissajimison/Documents/c5/exercise/Data-Structures-Practice/algorithms/sage/client/src/apiWrapper.js"],"names":["getUser","response","fetch","body","json","status","Error","message","getUserFavoriteMovies","user","username","uploadMovie","data","console","log","method","headers","JSON","stringify","movie"],"mappings":"AAAA,OAAO,eAAeA,OAAf,GAAyB;AAC9B,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAD,CAA5B;AACA,QAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,MAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B,MAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AAE7B,SAAOJ,IAAP;AACD;AAAA;AAED,OAAO,eAAeK,qBAAf,CAAqCC,IAArC,EAA2C;AAChD,QAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAE,eAAcO,IAAI,CAACC,QAAS,EAA9B,CAA5B;AACA,QAAMP,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,MAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B,MAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AAC7B,SAAOJ,IAAP;AACD;AAAA;AAED,OAAO,eAAeQ,WAAf,CAA2BC,IAA3B,EAAiC;AACtC;AACA;AACA;AACA;AACA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,IAAxB;AACA,QAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAD,EAAe;AACzCa,IAAAA,MAAM,EAAE,MADiC;AAEzCC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFgC;AAKzCb,IAAAA,IAAI,EAAEc,IAAI,CAACC,SAAL,CAAe;AAAEC,MAAAA,KAAK,EAAEP;AAAT,KAAf;AALmC,GAAf,CAA5B;AAQA,QAAMT,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,SAAOD,IAAP;AACD;AAAA","sourcesContent":["export async function getUser() {\n  const response = await fetch('/api/user');\n  const body = await response.json();\n  if (response.status !== 200) throw Error(body.message);\n\n  return body;\n};\n\nexport async function getUserFavoriteMovies(user) {\n  const response = await fetch(`/api/movies/${user.username}`);\n  const body = await response.json();\n  if (response.status !== 200) throw Error(body.message);\n  return body;\n};\n\nexport async function uploadMovie(data) {\n  // let requestData = await data.map((item) => {\n  //   let date = item.dateWatched.split('-')\n  //   return item.dateWatched = Date.UTC(date[0], date[1], date[2])\n  // })\n  //2020-02-19\n  console.log('data===>', data);\n  const response = await fetch('/api/movie', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ movie: data }),\n  });\n\n  const body = await response.json();\n  return body\n};\n"]},"metadata":{},"sourceType":"module"}