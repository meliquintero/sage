{"ast":null,"code":"var _jsxFileName = \"/Users/melissajimison/Documents/c5/exercise/Data-Structures-Practice/algorithms/sage/client/src/App.js\";\nimport React, { Component } from 'react';\nimport User from './models/user';\nimport Movies from './components/Movies';\nimport MoviesButton from './components/MoviesButton';\nimport UploadMovie from './components/UploadMovie';\nimport { getUser, getUserFavoriteMovies } from './apiWrapper';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      moviesAreLoaded: false,\n      user: '',\n      movies: []\n    };\n\n    this.handleGetMovies = () => {\n      getUserFavoriteMovies(this.state.user).then(result => {\n        this.setState({\n          moviesAreLoaded: true,\n          movies: result\n        });\n      }, error => {\n        this.setState({\n          moviesAreLoaded: true,\n          error\n        });\n      });\n    };\n\n    this.uploadMovie = movie => {\n      let movies = [...this.state.movies, movie];\n      this.setState({\n        movies: movies\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const response = await fetch('/api/world', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          post: this.state.post\n        })\n      });\n      const body = await response.text();\n      this.setState({\n        responseToPost: body\n      });\n    };\n  }\n\n  componentDidMount() {\n    getUser().then(result => {\n      this.setState({\n        user: new User(result.username)\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      user,\n      error,\n      moviesAreLoaded,\n      movies\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \" Welcome \", user.username, \"!\"), React.createElement(MoviesButton, {\n      getMovies: this.handleGetMovies,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), movies && !moviesAreLoaded ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Loading...\") : React.createElement(Movies, {\n      movies: movies,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(UploadMovie, {\n      uploadMovie: this.uploadMovie,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/melissajimison/Documents/c5/exercise/Data-Structures-Practice/algorithms/sage/client/src/App.js"],"names":["React","Component","User","Movies","MoviesButton","UploadMovie","getUser","getUserFavoriteMovies","App","state","moviesAreLoaded","user","movies","handleGetMovies","then","result","setState","error","uploadMovie","movie","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","post","text","responseToPost","componentDidMount","username","isLoaded","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport User from './models/user';\nimport Movies from './components/Movies';\nimport MoviesButton from './components/MoviesButton';\nimport UploadMovie from './components/UploadMovie';\n\nimport {getUser, getUserFavoriteMovies} from './apiWrapper';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    moviesAreLoaded: false,\n    user: '',\n    movies: []\n  };\n\n  componentDidMount() {\n    getUser()\n      .then(\n        (result) => {\n          this.setState({\n            user: new User(result.username)\n          });\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  handleGetMovies = () => {\n    getUserFavoriteMovies(this.state.user)\n      .then(\n        (result) => {\n          this.setState({\n            moviesAreLoaded: true,\n            movies: result\n          });\n        },\n        (error) => {\n          this.setState({\n            moviesAreLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  uploadMovie = (movie) => {\n    let movies = [...this.state.movies, movie]\n    this.setState({movies: movies})\n  }\n\n  handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('/api/world', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ post: this.state.post }),\n    });\n    const body = await response.text();\n\n    this.setState({ responseToPost: body });\n  };\n\nrender() {\n    const { user, error, moviesAreLoaded, movies } = this.state;\n    return (\n      <div className=\"App\">\n        <h1 className=\"username\"> Welcome {user.username}!</h1>\n\n        <MoviesButton getMovies={this.handleGetMovies} />\n        {movies && !moviesAreLoaded ? <div>Loading...</div> : <Movies movies={movies}/>}\n        <UploadMovie uploadMovie={this.uploadMovie}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}